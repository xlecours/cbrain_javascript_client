/**
 * CBRAIN API
 * REST API for interacting with the CBRAIN Platform
 *
 * OpenAPI spec version: 5.0.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CbrainApi) {
      root.CbrainApi = {};
    }
    root.CbrainApi.FileInfo = factory(root.CbrainApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The FileInfo model module.
   * @module model/FileInfo
   * @version 5.0.2
   */

  /**
   * Constructs a new <code>FileInfo</code>.
   * @alias module:model/FileInfo
   * @class
   */
  var exports = function() {
    var _this = this;














  };

  /**
   * Constructs a <code>FileInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FileInfo} obj Optional instance to populate.
   * @return {module:model/FileInfo} The populated <code>FileInfo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('userfile_id')) {
        obj['userfile_id'] = ApiClient.convertToType(data['userfile_id'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('group')) {
        obj['group'] = ApiClient.convertToType(data['group'], 'String');
      }
      if (data.hasOwnProperty('gid')) {
        obj['gid'] = ApiClient.convertToType(data['gid'], 'Number');
      }
      if (data.hasOwnProperty('owner')) {
        obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
      }
      if (data.hasOwnProperty('uid')) {
        obj['uid'] = ApiClient.convertToType(data['uid'], 'Number');
      }
      if (data.hasOwnProperty('permissions')) {
        obj['permissions'] = ApiClient.convertToType(data['permissions'], 'Number');
      }
      if (data.hasOwnProperty('size')) {
        obj['size'] = ApiClient.convertToType(data['size'], 'Number');
      }
      if (data.hasOwnProperty('state_ok')) {
        obj['state_ok'] = ApiClient.convertToType(data['state_ok'], 'Boolean');
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('symbolic_type')) {
        obj['symbolic_type'] = ApiClient.convertToType(data['symbolic_type'], 'String');
      }
      if (data.hasOwnProperty('atime')) {
        obj['atime'] = ApiClient.convertToType(data['atime'], 'Number');
      }
      if (data.hasOwnProperty('mtime')) {
        obj['mtime'] = ApiClient.convertToType(data['mtime'], 'Number');
      }
    }
    return obj;
  }

  /**
   * id of the userfile
   * @member {Number} userfile_id
   */
  exports.prototype['userfile_id'] = undefined;
  /**
   * the base filename
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * string representation of gid, the group's name
   * @member {String} group
   */
  exports.prototype['group'] = undefined;
  /**
   * numeric group id of the file
   * @member {Number} gid
   */
  exports.prototype['gid'] = undefined;
  /**
   * string representation of uid, the owner's name
   * @member {String} owner
   */
  exports.prototype['owner'] = undefined;
  /**
   * numeric uid of owner
   * @member {Number} uid
   */
  exports.prototype['uid'] = undefined;
  /**
   * an int interpreted in octal, e.g. 0640
   * @member {Number} permissions
   */
  exports.prototype['permissions'] = undefined;
  /**
   * size of file in bytes
   * @member {Number} size
   */
  exports.prototype['size'] = undefined;
  /**
   * flag that tell whether or not it's OK to register/unregister
   * @member {Boolean} state_ok
   */
  exports.prototype['state_ok'] = undefined;
  /**
   * a message to give more information about the state_ok flag
   * @member {String} message
   */
  exports.prototype['message'] = undefined;
  /**
   * one of :regular, :symlink, :directory
   * @member {String} symbolic_type
   */
  exports.prototype['symbolic_type'] = undefined;
  /**
   * access time (an int, since Epoch)
   * @member {Number} atime
   */
  exports.prototype['atime'] = undefined;
  /**
   * modification time (an int, since Epoch)
   * @member {Number} mtime
   */
  exports.prototype['mtime'] = undefined;



  return exports;
}));


