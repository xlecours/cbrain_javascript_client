/**
 * CBRAIN API
 * Interface to control CBRAIN operations
 *
 * OpenAPI spec version: 4.5.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && false) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Bourreau', 'model/CbrainTask', 'model/DataProvider', 'model/Group', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/InlineResponse2002', 'model/Parameters', 'model/Params', 'model/Params1', 'model/Tag', 'model/Tool', 'model/ToolConfig', 'model/User', 'model/Userfile', 'api/BourreauApi', 'api/DataProvidersApi', 'api/GroupsApi', 'api/SessionsApi', 'api/TagsApi', 'api/TasksApi', 'api/ToolConfigsApi', 'api/ToolsApi', 'api/UserfilesApi', 'api/UsersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Bourreau'), require('./model/CbrainTask'), require('./model/DataProvider'), require('./model/Group'), require('./model/InlineResponse200'), require('./model/InlineResponse2001'), require('./model/InlineResponse2002'), require('./model/Parameters'), require('./model/Params'), require('./model/Params1'), require('./model/Tag'), require('./model/Tool'), require('./model/ToolConfig'), require('./model/User'), require('./model/Userfile'), require('./api/BourreauApi'), require('./api/DataProvidersApi'), require('./api/GroupsApi'), require('./api/SessionsApi'), require('./api/TagsApi'), require('./api/TasksApi'), require('./api/ToolConfigsApi'), require('./api/ToolsApi'), require('./api/UserfilesApi'), require('./api/UsersApi'));
  }
}(function(ApiClient, Bourreau, CbrainTask, DataProvider, Group, InlineResponse200, InlineResponse2001, InlineResponse2002, Parameters, Params, Params1, Tag, Tool, ToolConfig, User, Userfile, BourreauApi, DataProvidersApi, GroupsApi, SessionsApi, TagsApi, TasksApi, ToolConfigsApi, ToolsApi, UserfilesApi, UsersApi) {
  'use strict';

  /**
   * Interface_to_control_CBRAIN_operations.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var CbrainApi = require('index'); // See note below*.
   * var xxxSvc = new CbrainApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new CbrainApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new CbrainApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new CbrainApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 4.5.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Bourreau model constructor.
     * @property {module:model/Bourreau}
     */
    Bourreau: Bourreau,
    /**
     * The CbrainTask model constructor.
     * @property {module:model/CbrainTask}
     */
    CbrainTask: CbrainTask,
    /**
     * The DataProvider model constructor.
     * @property {module:model/DataProvider}
     */
    DataProvider: DataProvider,
    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group: Group,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001: InlineResponse2001,
    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002: InlineResponse2002,
    /**
     * The Parameters model constructor.
     * @property {module:model/Parameters}
     */
    Parameters: Parameters,
    /**
     * The Params model constructor.
     * @property {module:model/Params}
     */
    Params: Params,
    /**
     * The Params1 model constructor.
     * @property {module:model/Params1}
     */
    Params1: Params1,
    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag: Tag,
    /**
     * The Tool model constructor.
     * @property {module:model/Tool}
     */
    Tool: Tool,
    /**
     * The ToolConfig model constructor.
     * @property {module:model/ToolConfig}
     */
    ToolConfig: ToolConfig,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The Userfile model constructor.
     * @property {module:model/Userfile}
     */
    Userfile: Userfile,
    /**
     * The BourreauApi service constructor.
     * @property {module:api/BourreauApi}
     */
    BourreauApi: BourreauApi,
    /**
     * The DataProvidersApi service constructor.
     * @property {module:api/DataProvidersApi}
     */
    DataProvidersApi: DataProvidersApi,
    /**
     * The GroupsApi service constructor.
     * @property {module:api/GroupsApi}
     */
    GroupsApi: GroupsApi,
    /**
     * The SessionsApi service constructor.
     * @property {module:api/SessionsApi}
     */
    SessionsApi: SessionsApi,
    /**
     * The TagsApi service constructor.
     * @property {module:api/TagsApi}
     */
    TagsApi: TagsApi,
    /**
     * The TasksApi service constructor.
     * @property {module:api/TasksApi}
     */
    TasksApi: TasksApi,
    /**
     * The ToolConfigsApi service constructor.
     * @property {module:api/ToolConfigsApi}
     */
    ToolConfigsApi: ToolConfigsApi,
    /**
     * The ToolsApi service constructor.
     * @property {module:api/ToolsApi}
     */
    ToolsApi: ToolsApi,
    /**
     * The UserfilesApi service constructor.
     * @property {module:api/UserfilesApi}
     */
    UserfilesApi: UserfilesApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi
  };

  return exports;
}));
